// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongodb"]
}

enum ModelTrainingStatusEnum {
  Pending
  Generated
  Failed
}

enum OutputImageStatusEnum {
  Pending
  Generated
  Failed
}

enum PlanType {
  basic
  premium
}

enum ModelTypeEnum {
  Man
  Woman
  Others
}

enum EthenecityEnum {
  White
  Black
  Asian_American   @map("Asian American")
  East_Asian       @map("East Asian")
  South_East_Asian @map("South East Asian")
  South_Asian      @map("South Asian")
  Middle_Eastern   @map("Middle Eastern")
  Pacific
  Hispanic
}

enum EyeColorEnum {
  Brown
  Blue
  Hazel
  Gray
}

enum TransactionStatus {
  PENDING
  SUCCESS
  FAILED
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  clerkId        String   @unique
  email          String   @unique
  name           String?
  profilePicture String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Model {
  id             String                  @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  type           ModelTypeEnum
  age            Int
  ethnicity      EthenecityEnum
  eyeColor       EyeColorEnum
  bald           Boolean
  userId         String
  triggerWord    String?
  tensorPath     String?
  thumbnail      String?
  trainingStatus ModelTrainingStatusEnum @default(Pending)
  outputImages   OutputImages[]
  createdAt      DateTime                @default(now())
  updatedAt      DateTime                @updatedAt
  falAiRequestId String?
  zipUrl         String
  open           Boolean                 @default(false)

  @@index([falAiRequestId])
}

model OutputImages {
  id             String                @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl       String                @default("")
  modelId        String
  userId         String
  prompt         String
  falAiRequestId String?
  status         OutputImageStatusEnum @default(Pending)
  model          Model                 @relation(fields: [modelId], references: [id])
  createdAt      DateTime              @default(now())
  updatedAt      DateTime              @updatedAt

  @@index([falAiRequestId])
}

model Packs {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String        @default("")
  imageUrl1   String        @default("")
  imageUrl2   String        @default("")
  prompts     PackPrompts[]
}

model PackPrompts {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  prompt String
  packId String
  pack   Packs  @relation(fields: [packId], references: [id])
}

model Subscription {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  plan      PlanType
  paymentId String
  orderId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserCredit {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @unique
  amount    Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id        String            @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  amount    Int
  currency  String
  paymentId String
  orderId   String
  plan      PlanType
  status    TransactionStatus @default(PENDING)
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt

  @@index([userId])
}
